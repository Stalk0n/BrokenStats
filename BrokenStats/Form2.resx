<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>